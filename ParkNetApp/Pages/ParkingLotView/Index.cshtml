@page "{id?}"
@model ParkNetApp.Pages.ParkingLotView.IndexModel

@{
    ViewData["Title"] = "Parking Lot Layout";
    var parkingLot = Model.ParkingModel.GroupBy(s => s.FloorId); // Agrupa os slots por andar
}


<style>
    .parking-grid {
        display: grid;
        grid-template-columns: repeat(20, 50px);
        grid-auto-rows: 50px; /* Ajusta dinamicamente o número de linhas */
        gap: 5px;
    }
</style>


<h1>@parkingLot.First().First().ParkingLotDesignation</h1>
@foreach (var floor in parkingLot)
{
    <h2>@floor.First().FloorName</h2>

    var sortedByCodeFloor = floor
    .OrderBy(s => s.SlotCode[0]) // Ordena por letra (A, B, C...)
    .ThenBy(s => s.SlotCode.Substring(1).PadLeft(3, '0'))
    .ToList();


    <div class="parking-grid">
        @foreach (var slot in sortedByCodeFloor)
        {
            var rowIdx = slot.RowIndex + 1;
            var colIdx = slot.ColumnIndex + 1;

            <div class="slot @(slot.IsOccupied ? "occupied" : "free") @(slot.SlotType == 'M' ? "moto" : "car")"
                 style="grid-row: @rowIdx; grid-column: @colIdx;">
                <a asp-page="./Edit" asp-route-id="@slot.SlotId">
                    @slot.SlotCode [@(slot.SlotType == 'M' ? "moto" : "car")]
                </a>
            </div>
        }
    </div>
}
